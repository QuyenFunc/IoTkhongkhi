{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        ".validate": "newData.hasChildren(['id', 'email', 'name', 'createdAt', 'updatedAt', 'isEmailVerified', 'preferences'])",
        "id": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length >= 1 && newData.val().length <= 100"
        },
        "phoneNumber": {
          ".validate": "newData.isString() || newData.val() == null"
        },
        "profileImageUrl": {
          ".validate": "newData.isString() || newData.val() == null"
        },
        "createdAt": {
          ".validate": "newData.isString()"
        },
        "updatedAt": {
          ".validate": "newData.isString()"
        },
        "isEmailVerified": {
          ".validate": "newData.isBoolean()"
        },
        "preferences": {
          ".validate": "newData.hasChildren(['language', 'theme', 'notificationsEnabled'])",
          "language": {
            ".validate": "newData.isString() && (newData.val() == 'vi' || newData.val() == 'en')"
          },
          "theme": {
            ".validate": "newData.isString() && (newData.val() == 'light' || newData.val() == 'dark' || newData.val() == 'system')"
          },
          "notificationsEnabled": {
            ".validate": "newData.isBoolean()"
          },
          "pushNotificationsEnabled": {
            ".validate": "newData.isBoolean()"
          },
          "emailNotificationsEnabled": {
            ".validate": "newData.isBoolean()"
          },
          "dataRefreshInterval": {
            ".validate": "newData.isNumber() && newData.val() >= 10 && newData.val() <= 300"
          },
          "temperatureUnit": {
            ".validate": "newData.isString() && (newData.val() == 'celsius' || newData.val() == 'fahrenheit')"
          },
          "soundEnabled": {
            ".validate": "newData.isBoolean()"
          },
          "vibrationEnabled": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    "devices": {
      "$deviceId": {
        ".read": "auth != null && (root.child('devices').child($deviceId).child('ownerId').val() == auth.uid || root.child('devices').child($deviceId).child('sharedWith').child(auth.uid).exists())",
        ".write": "auth != null && (root.child('devices').child($deviceId).child('ownerId').val() == auth.uid || !root.child('devices').child($deviceId).exists())",
        ".validate": "newData.hasChildren(['id', 'name', 'type', 'ownerId', 'createdAt', 'updatedAt'])",
        "ownerId": {
          ".validate": "newData.isString() && (newData.val() == auth.uid || data.val() == auth.uid)"
        }
      }
    },
    "sensorData": {
      "$deviceId": {
        ".read": "auth != null && root.child('devices').child($deviceId).child('ownerId').val() == auth.uid",
        ".write": "auth != null && root.child('devices').child($deviceId).child('ownerId').val() == auth.uid"
      }
    }
  }
}
